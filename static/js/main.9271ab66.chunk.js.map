{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","handleClick","value","Board","renderSquare","i","squares","clickAction","this","React","Component","Game","Reset","history","state","length","setState","concat","xIsNext","stepNumber","calculateWinner","Array","fill","status","current","winner","empty","possibilities","a","b","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9271ab66.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Square(props){\r\n    return(\r\n        <button className=\"square\" onClick={props.handleClick}>\r\n            {props.value}\r\n        </button>    \r\n    )\r\n}","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends React.Component{\r\n    renderSquare = (i) =>{\r\n        return(\r\n            <Square value={this.props.squares[i]} handleClick={()=>this.props.clickAction(i)}/>\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"border-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"border-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"border-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Board from \"./Board\";\r\n\r\n\r\nexport default class Game extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            xIsNext: true, //first turn is of x(intitially)\r\n            stepNumber: 0, //which turn is this\r\n            history:[ //keeps track of states of boxes\r\n                {squares: Array(9).fill(null)} //initially all zeroes but will get updates as to which index box is 'X' or '0',squares is the key used to access the array\r\n            ]\r\n        }\r\n    }\r\n\r\n    Reset= () =>{\r\n        const history=this.state.history\r\n        const current=history[history.length-1]\r\n        const squares=current.squares\r\n\r\n        for(let i=0;i<9;i++){\r\n            squares[i]=null\r\n        }\r\n\r\n        this.setState({\r\n            history:history.concat({\r\n                squares:squares\r\n            }),\r\n            xIsNext:true,\r\n            stepNumber:0\r\n        })\r\n    }\r\n\r\n    handleClick = (i) =>{\r\n        const history= this.state.history\r\n        const current=history[history.length-1]\r\n        const squares=current.squares\r\n\r\n        const winner = calculateWinner(squares)\r\n\r\n        if(winner || squares[i]){ //Wont change if we have a winner already or the box clicked already has a value\r\n            return\r\n        }\r\n\r\n        squares[i]=this.state.xIsNext ? 'X' :'O'\r\n        this.setState({\r\n            history:history.concat({\r\n                squares:squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const history= this.state.history\r\n        const current= history[history.length-1]\r\n        let status\r\n        const winner = calculateWinner(current.squares)\r\n        if(winner){\r\n            status= 'Winner is '+winner\r\n        }\r\n        else{\r\n            let empty=9\r\n            for(let i=0;i<9;i++){\r\n                if(current.squares[i]){\r\n                    empty--;\r\n                }\r\n            }\r\n            if(empty>1){\r\n                status='Next Player is '+(this.state.xIsNext?'X':'O')\r\n            }\r\n            else{\r\n                status='Its a Tie!'\r\n            }\r\n        }\r\n\r\n\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board clickAction={(i)=>this.handleClick(i)} squares={current.squares}/>\r\n                </div>\r\n\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <div><button onClick={()=>this.Reset()}>Reset!!</button></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares){\r\n    const possibilities=[\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n    ]\r\n\r\n    for(let i=0;i<possibilities.length;i++){\r\n        const [a,b,c]=possibilities[i]\r\n        if(squares[a] && squares[a]==squares[b] && squares[b]==squares[c]){\r\n            return squares[a]\r\n        }\r\n    }\r\n\r\n    return null //No Winner yet\r\n}","import './App.css';\nimport Game from './components/Game';\nimport React from 'react';\nimport { render } from 'react-dom';\n\n/*class App extends React.Component{\n  render(){\n    return(\n      <div>I'm a class Component</div>\n    )\n  }\n}*/\n\nfunction App() {\n  return (\n    <Game/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}